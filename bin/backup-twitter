#!/bin/sh
#/ Usage: backup-twitter <user> <dest>
#/        backup-twitter import <dest> <archives>
set -e

usage() {
    grep ^#/ <"$0" |cut -c4-
    exit 2
}

# make sure the jq(1) command is available
if $(command -v "jq">/dev/null);
then true
else
    echo "jq is not available. please install it from" \
        "https://github.com/stedolan/jq" >&2
    exit 1
fi

# parse and validate arguments
user=
import=
dest=
archives=
while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            usage ;;
        import)
            import=1
            dest="$2"
            archives="$3"
            test $# -ne 3 && usage
            shift
            shift
            shift ;;
        *)
            test $# -ne 2 && usage
            user="$1"
            dest="$2"
            shift
            shift ;;
    esac
done

# make sure the given destination directory exists
if ! test -d "$dest";
then
    echo "destination directory not found: $dest" >&2
    exit 1
fi

# same for the archive directory when in import mode
if test -n "$archives" && ! test -d "$archives";
then
    echo >&2 "archives directory not found: $archives" >&2
    exit 1
fi

# where tweets and direct messages are saved
tweets="$dest/tweets.json"
messages="$dest/messages"

# set this to avoid having to cd into the backup repository
GIT_WORK_TREE="$dest"
GIT_DIR="$dest/.git"
export GIT_WORK_TREE GIT_DIR

# initialize the git repository if necessary
repo_check="$(git rev-parse --show-toplevel 2>/dev/null)"
if test $? != 0 || test "$repo_check" != "$dest";
then git init "$dest">/dev/null
fi

# import the archives into our tweets.json file and report status
test -n "$import" && {
    # bail out if the tweets file already exists
    test -f "$tweets" && {
        echo "Tweet file $tweets already present. Please remove it before" \
            "proceeding." >&2
        exit 1
    }

    for fn in $(find . -name '*.js')
    do cat $fn | tail -n+2
    done | jq -c -M '.[]' > "$tweets"

    echo "imported $(jq -s '. | length' $tweets) tweets into $tweets" >&2
    exit
}

# make sure the initial import is present
if ! test -f "$tweets" || test $(jq -s '. | length' "$tweets") -eq 0;
then
    echo "Please download your archives from twitter.com and run:" \
        "\n$(basename $0) import $dest ~/Downloads/tweets/data/js/tweets" >&2
    exit 1
fi

echo "backing up direct messages to $messages" >&2
test -d "$messages" || mkdir "$messages"
perl $HOME/bin/jwz-twitter-backup.pl --user "$user" "$messages"

# commit changes to git if any
test -n "$(git status --porcelain)" && {
    message="import tweets and direct messages of twitter.com/$user with"
    message+=" $(basename $0)"
    git add . >/dev/null
    git commit -m "$message">/dev/null
}
